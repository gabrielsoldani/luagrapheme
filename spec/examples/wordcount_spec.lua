local segments = require("examples.wordcount")

describe("example.segments", function()
   local stdin, stdout, stderr

   before_each(function()
      stdin = io.tmpfile()
      stdout = io.tmpfile()
      stderr = io.tmpfile()
   end)

   after_each(function()
      stdin:close()
      stdout:close()
      stderr:close()
   end)

   it("should print usage when called with invalid arguments", function()
      local arg = { "anything" }
      local result = segments(arg, stdin, stdout, stderr)

      assert.are.same(1, result)
      stderr:seek("set")
      local error_message = stderr:read("*a")
      assert.matches("^Usage:", error_message)
   end)

   local cases = {
      {
         input = "Hello, world!",
         expected = {
            '1\t" "',
            '1\t"!"',
            '1\t","',
            '1\t"hello"',
            '1\t"world"',
         },
      },
      {
         input = "one fish, two fish, red fish, blue fish",
         expected = {
            '7\t" "',
            '4\t"fish"',
            '3\t","',
            '1\t"blue"',
            '1\t"one"',
            '1\t"red"',
            '1\t"two"',
         },
      },
      {
         input = [[В начале июля, в чрезвычайно жаркое время, под вечер, один
            молодой человек вышел из своей каморки, которую нанимал от жильцов
            в С  м переулке, на улицу и медленно, как бы в нерешимости,
            отправился к К  ну мосту. Он благополучно избегнул встречи с своею
            хозяйкой на лестнице. Каморка его приходилась под самою кровлей
            высокого пятиэтажного дома и походила более на шкаф, чем на
            квартиру. Квартирная же хозяйка его, у которой он нанимал эту
            каморку с обедом и прислугой, помещалась одною лестницей ниже,
            в отдельной квартире, и каждый раз, при выходе на улицу, ему
            непременно надо было проходить мимо хозяйкиной кухни, почти всегда
            настежь отворенной на лестницу. И каждый раз молодой человек,
            проходя мимо, чувствовал какое-то болезненное и трусливое ощущение,
            которого стыдился и от которого морщился. Он был должен кругом
            хозяйке и боялся с нею встретиться.]],
         expected = {
            '118\t" "',
            '18\t","',
            '13\t"\\n"',
            '13\t"            "',
            '8\t"и"',
            '6\t"."',
            '6\t"на"',
            '5\t"в"',
            '4\t"с"',
            '3\t"он"',
            '2\t"  "',
            '2\t"его"',
            '2\t"к"',
            '2\t"каждый"',
            '2\t"которого"',
            '2\t"мимо"',
            '2\t"молодой"',
            '2\t"нанимал"',
            '2\t"от"',
            '2\t"под"',
            '2\t"раз"',
            '2\t"улицу"',
            '2\t"человек"',
            '1\t"-"',
            '1\t"благополучно"',
            '1\t"более"',
            '1\t"болезненное"',
            '1\t"боялся"',
            '1\t"бы"',
            '1\t"был"',
            '1\t"было"',
            '1\t"вечер"',
            '1\t"время"',
            '1\t"всегда"',
            '1\t"встретиться"',
            '1\t"встречи"',
            '1\t"высокого"',
            '1\t"выходе"',
            '1\t"вышел"',
            '1\t"должен"',
            '1\t"дома"',
            '1\t"ему"',
            '1\t"жаркое"',
            '1\t"же"',
            '1\t"жильцов"',
            '1\t"из"',
            '1\t"избегнул"',
            '1\t"июля"',
            '1\t"как"',
            '1\t"какое"',
            '1\t"каморка"',
            '1\t"каморки"',
            '1\t"каморку"',
            '1\t"квартире"',
            '1\t"квартирная"',
            '1\t"квартиру"',
            '1\t"которой"',
            '1\t"которую"',
            '1\t"кровлей"',
            '1\t"кругом"',
            '1\t"кухни"',
            '1\t"лестнице"',
            '1\t"лестницей"',
            '1\t"лестницу"',
            '1\t"м"',
            '1\t"медленно"',
            '1\t"морщился"',
            '1\t"мосту"',
            '1\t"надо"',
            '1\t"настежь"',
            '1\t"начале"',
            '1\t"непременно"',
            '1\t"нерешимости"',
            '1\t"нею"',
            '1\t"ниже"',
            '1\t"ну"',
            '1\t"обедом"',
            '1\t"один"',
            '1\t"одною"',
            '1\t"отворенной"',
            '1\t"отдельной"',
            '1\t"отправился"',
            '1\t"ощущение"',
            '1\t"переулке"',
            '1\t"помещалась"',
            '1\t"походила"',
            '1\t"почти"',
            '1\t"при"',
            '1\t"прислугой"',
            '1\t"приходилась"',
            '1\t"проходить"',
            '1\t"проходя"',
            '1\t"пятиэтажного"',
            '1\t"самою"',
            '1\t"своей"',
            '1\t"своею"',
            '1\t"стыдился"',
            '1\t"то"',
            '1\t"трусливое"',
            '1\t"у"',
            '1\t"хозяйка"',
            '1\t"хозяйке"',
            '1\t"хозяйкиной"',
            '1\t"хозяйкой"',
            '1\t"чем"',
            '1\t"чрезвычайно"',
            '1\t"чувствовал"',
            '1\t"шкаф"',
            '1\t"эту"',
         },
      },
   }

   for caseno, case in ipairs(cases) do
      it("should handle case #" .. caseno, function()
         local input_text = case.input

         stdin:write(input_text)
         stdin:flush()
         stdin:seek("set")

         local result = segments({}, stdin, stdout, stderr)

         assert.are.same(0, result)

         stdout:seek("set")
         for i = 1, #case.expected do
            local line = stdout:read("*l")
            assert.are.same(case.expected[i], line)
         end
      end)
   end
end)
